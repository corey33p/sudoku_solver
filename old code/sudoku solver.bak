import fileinput
import filecmp
import os.path
board = {}

def manualboard():
    global board
    cell = 0
    print('Input puzzle manually...\n')
    while cell < 81:
        cell += 1
        row = ((cell - 1)//9 + 1)
        column = cell % 9
        if column == 0:
            column = 9
        board[row, column] = input('Value at row ' + str(row) + ', column ' + str(column) + ': ')
    return board

def printoptions():
    all = os.listdir()
    index = 0
    print('\n')
    while index < len(all):
        if os.path.isfile(all[index]):
                print(all[index])
        
        index = index + 1
    
    print('\n')
    return

def getdata():
    filename = input('In which file is the sudoku data located? ')
    while (os.path.isfile(filename) == False):
        print('\nNot a valid filename. Press 1 to view files to choose from or 2 to enter a new filename:\n')
        choice = input('1 or 2? ')
        while (choice != '1') and (choice != '2'):
            choice = input("Choose '1' or '2': ")
           
        if choice == '1':
            printoptions()
            filename = input('In which file is the sudoku data located? ')
           
        elif choice == '2':
            filename = input('\nIn which file is the sudoku data located? ')
                
    data = open(filename)
    return data.read()

def buildboard(data):
    global board
    strpos = 0
    cell = 1
    while ((cell <= 81) and (strpos < len(data))):
        row = ((cell - 1)//9 + 1)
        column = cell % 9
        if column == 0:
            column = 9
        if data[strpos] == '\n':
            strpos += 1
        else:
            try:
                board[row, column] = int(data[strpos])
                cell += 1
                strpos += 1
            except:
                board[row, column] = '_'
                cell += 1
                strpos += 1
    return

def builddummy():
    global board
    counter = 1
    row = 1
    while row <= 9:
        column = 1
        while column <= 9:
            board[row, column] = 1
            counter += 1
            column += 1
        row += 1
    return

def printboard():
    print('\n')
    global board
    cell = 0
    while cell < 81:
        cell += 1
        row = ((cell - 1)//9 + 1)
        column = cell % 9
        if column == 0 and (row % 3 == 0):
            print(str(board[row, 9]))
            print('---------------------------')
        elif column == 0:
            print(str(board[row, 9]) + '\n')
        elif column % 3 == 0:
            print(str(board[row, column]) + ' | ', end = '')
        else:
            print(str(board[row, column]) + '  ', end = '')
    print('\n')
    return

def findstart():
    global board
    boardbackup = board
    cell = 0
    while cell < 81:
        cell +=1
        row = ((cell - 1)//9 + 1)
        column = cell % 9
        if column == 0:
            column = 9
        if board[row, column] == '_':
            solvecell(row, column)
        else:
            cell =+ 1

def getgroup():
    

        
def solvecell(row, column):
    global board
    cell = 0
    while cell < 81:
        cell += 1
        row = ((cell - 1)//9 + 1)
        column = cell % 9
        if column == 0:
            column = 9
        numcounter = 1
        rowcounter = 1
        colcounter = 1
        while counter <= 9:
            matchfound = False
            while rowcounter <= 9:
                if board[rowcounter, column] == counter:
                    matchfound = True
                    rowcounter = 10
                rowcounter += 1
            while colcounter <= 9 and matchfound = False:
                if board[row, colcounter] == counter:
                    matchfound = True
                    colcounter = 10
                colcounter += 1
    return board